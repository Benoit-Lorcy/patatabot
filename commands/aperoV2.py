#!/usr/bin/env python
# -*- coding: UTF-8 -*-
import json
from aperoV2_files.apero_class import Apero
from aperoV2_files.requete import requete
from aperoV2_files.traitement_args import *

"""
TODO:
Axes d'am√©lioration :
 - voir si la timezone est g√™nante
 - r√©gler la date de fin afin qu'elle puisse √™tre choise
 - faire un rappel 1h (par exemple) avant le d√©but
 - envoyer un msg de confirmation d√®s que la commande est r√©ussie
 - g√©rer les erreurs d'incompr√©hension de timeparser
"""

"""
Fonction principale :
Entr√©e : 
 -  la commande / le message discord
D√©clencheur : 
 -  "/ap√©ro " (et la suite du message)
    l'espace apr√®s est important : je compte sur √ßa pour pouvoir diff√©rencier l'ap√©roV2 avec l'ap√©ro
Traitement : 
 -  Rajoute un √©v√©nement discord selon les informations pass√©es
    TODO : avoir un msg du bot de confirmation

# FIXME le "pour" contient la description donc il tout et n'importe quoi : 
# √ßa pose probl√®me car les mots clefs sont biais√©s si le pour est plac√© en d√©but de commande
"""
# @bot.command(name = "apero ", aliases = ["soir√©e"])
if __name__ == "__main__":
    # cmd = "/apero chez sam   mercredi le 15 janvier 2022 a 18h30 pour boire"
    # cmd = "/apero chez sam mercredi √† 18h30 pour boire"
    # cmd = "/apero pour boire chez sam √† 18h31 le 14 janvier"

    cmd = "/apero chez Mael et Alexis √† 18h32 le 31 pour f√™ter le nouvel an"
    pos = decomposer_cmd(cmd)
    apero_obj = enregistrer_arguments(cmd, pos)
    apero_obj.affiche_brut()
    status = requete(apero_obj)
    print(json.dumps(status,indent=4))

    if str(status["status_code"])[0] != "2" :
        print("ERREUR : la requ√™te a √©chou√© ¬Ø\_(„ÉÑ)_/¬Ø ")
    else:
        print("Nouvel ap√©ro : allez donc checker les √©v√©nements discord et indiquer si vous √™tes int√©ress√©s üòÅ")
